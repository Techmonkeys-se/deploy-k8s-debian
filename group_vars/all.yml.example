# vars file for k8s 
ansible_python_interpreter: '/usr/bin/python3'

# api_dns: dns name in your LB/router that points to all nodes running API
api_dns: k8s.domain.com

# Podnetwork to use, do not use a network you already have in use outside of cluster
cidr_v: 10.244.0.0/16

# Virtual IP added to certSANs if used.
#virtual_ip: 

# Name of your cluster
clustername: kubernetes

# Secrets encoding.
# To get encoded secret run on linux terminal:
# head -c 32 /dev/urandom | base64
encoded_secret: MyIBGF/Q0asiQimH7bmSgNhLmErKT9hps103lyLLREE=

# etcd proxy port 
etcd_proxy_port: 2379

# Change this to own liking, only used when bootstraping cluster (TTL 24 hours)
bootstrap_token: abcdef.0123456789abcdef

# Choose version you want to install of kubernetes
k8s_version: v1.21.0

# Packages that will be installed on all nodes.
packages:
- apt-transport-https
- ca-certificates
- kubeadm
- kubectl
- kubelet
- iproute2
#- firewalld
#- python3-firewall
#- yum-utils 
#- device-mapper-persistent-data
- lvm2
- containerd.io

# Services to start
services:
- kubelet
- firewalld

# Based on https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#check-required-ports
# https://coreos.com/flannel/docs/latest/troubleshooting.html (Firewalls section)
master_ports:
# Cluster core ports
- "2379-2380/tcp"
- "6443/tcp"
- "10250-10252/tcp"
# Uncomment if flannel is the network plugin to be used
# 8285/udp is UDP backend and 8472/udp vxlan. Only open one of these choose wisely before entering the rabbit hole.
#- "8285/udp"
- "8472/udp"
# Prometheus ports, comment if not to be used
- "9100/tcp"
- "10249/tcp"
- "10257/tcp"
- "10259/tcp"

worker_ports:
- "10250/tcp"
- "30000-32767/tcp"
# Uncomment if flannel is the network plugin to be used
# 8285/udp is UDP backend and 8472/udp vxlan. Only open one of these choose wisely before entering the rabbit hole.
#- "8285/udp"
- "8472/udp"
# For prometheus metrics
- "9100/tcp"
- "10249/tcp"
# ingress ports, in this case haproxy with stats
- "80/tcp"
- "443/tcp"
- "1024/tcp"

# URL to network deployment yaml
# Choose what networking you are going to use (comment/uncommet/add firewalld rules needed)
# 1. https://docs.projectcalico.org/manifests/calico.yaml
# 2. https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
k8s_network_yaml: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

# URL to ingress deployment yaml
# Choose what networking you are going to use (comment/uncommet/add firewalld rules needed)
# 1. https://url.to.your.yaml.com/ingress.yaml
# 2. /local/directory/network-deployment.yaml
# 3. use the one provided i have copied from https://raw.githubusercontent.com/haproxytech/kubernetes-ingress/master/deploy/haproxy-ingress.yaml
#ingress_controller_yaml: 

# Do not change token_file (generated automatically)
token_file: join_token
kubeadm_init_log: kubeadm_init.log

# Below here is configuration needed if you are going to join new nodes.
# These Commands need to be run on a node with "kubeadm" installed
# Remember these tokens will expire so when adding nodes make sure all tokens are still valid

# Command to run to get join command for workers:
# kubeadm token create --print-join-command
# remove "kubeadm join" add rest here
add_worker_token: 

# To get token for joining masters run on master
# kubeadm init phase upload-certs --upload-certs
#
add_master_token: 111154dbbf7f4e7e00401111437937946da5880bcebc2612eb81046b0d1111
